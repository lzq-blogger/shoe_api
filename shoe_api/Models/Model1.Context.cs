//------------------------------------------------------------------------------
// <auto-generated>
//     此代码已从模板生成。
//
//     手动更改此文件可能导致应用程序出现意外的行为。
//     如果重新生成代码，将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

namespace shoe_api.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ShoeEntities : DbContext
    {
        public ShoeEntities()
            : base("name=ShoeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<admin> admin { get; set; }
        public virtual DbSet<buy_materials_details> buy_materials_details { get; set; }
        public virtual DbSet<customer> customer { get; set; }
        public virtual DbSet<get_materials> get_materials { get; set; }
        public virtual DbSet<in_money> in_money { get; set; }
        public virtual DbSet<in_repertory> in_repertory { get; set; }
        public virtual DbSet<materialr> materialr { get; set; }
        public virtual DbSet<materialr_details> materialr_details { get; set; }
        public virtual DbSet<materialr_epertory> materialr_epertory { get; set; }
        public virtual DbSet<materialr_type> materialr_type { get; set; }
        public virtual DbSet<materials_order> materials_order { get; set; }
        public virtual DbSet<materials_plan> materials_plan { get; set; }
        public virtual DbSet<materials_plan_details> materials_plan_details { get; set; }
        public virtual DbSet<materials_quality_testing> materials_quality_testing { get; set; }
        public virtual DbSet<order> order { get; set; }
        public virtual DbSet<order_details> order_details { get; set; }
        public virtual DbSet<out_materialr> out_materialr { get; set; }
        public virtual DbSet<out_money> out_money { get; set; }
        public virtual DbSet<out_repertory> out_repertory { get; set; }
        public virtual DbSet<pro_production> pro_production { get; set; }
        public virtual DbSet<pro_repertory> pro_repertory { get; set; }
        public virtual DbSet<product> product { get; set; }
        public virtual DbSet<product_plan> product_plan { get; set; }
        public virtual DbSet<product_plan_details> product_plan_details { get; set; }
        public virtual DbSet<product_quality_testing> product_quality_testing { get; set; }
        public virtual DbSet<product_type> product_type { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual ObjectResult<add_pro_repertory_Result> add_pro_repertory(Nullable<int> pro_product_id)
        {
            var pro_product_idParameter = pro_product_id.HasValue ?
                new ObjectParameter("pro_product_id", pro_product_id) :
                new ObjectParameter("pro_product_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<add_pro_repertory_Result>("add_pro_repertory", pro_product_idParameter);
        }
    
        public virtual ObjectResult<customer_order_details_Result> customer_order_details(Nullable<int> customer_orderid)
        {
            var customer_orderidParameter = customer_orderid.HasValue ?
                new ObjectParameter("customer_orderid", customer_orderid) :
                new ObjectParameter("customer_orderid", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<customer_order_details_Result>("customer_order_details", customer_orderidParameter);
        }
    
        public virtual ObjectResult<in_repertory_detail_Result> in_repertory_detail()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<in_repertory_detail_Result>("in_repertory_detail");
        }
    
        public virtual ObjectResult<materialr_details_materialr_Result> materialr_details_materialr(Nullable<int> material_id)
        {
            var material_idParameter = material_id.HasValue ?
                new ObjectParameter("material_id", material_id) :
                new ObjectParameter("material_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<materialr_details_materialr_Result>("materialr_details_materialr", material_idParameter);
        }
    
        public virtual ObjectResult<pro_plan_details_Result> pro_plan_details(Nullable<int> pro_plan_id)
        {
            var pro_plan_idParameter = pro_plan_id.HasValue ?
                new ObjectParameter("pro_plan_id", pro_plan_id) :
                new ObjectParameter("pro_plan_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<pro_plan_details_Result>("pro_plan_details", pro_plan_idParameter);
        }
    
        public virtual ObjectResult<select_pro_plan_details_Result> select_pro_plan_details(Nullable<int> pro_plan_details)
        {
            var pro_plan_detailsParameter = pro_plan_details.HasValue ?
                new ObjectParameter("pro_plan_details", pro_plan_details) :
                new ObjectParameter("pro_plan_details", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<select_pro_plan_details_Result>("select_pro_plan_details", pro_plan_detailsParameter);
        }
    
        public virtual ObjectResult<xp_SelectPageJihua_Result> xp_SelectPageJihua(Nullable<int> pageIndex, Nullable<int> pageSize, string pageWhere)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var pageWhereParameter = pageWhere != null ?
                new ObjectParameter("PageWhere", pageWhere) :
                new ObjectParameter("PageWhere", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_SelectPageJihua_Result>("xp_SelectPageJihua", pageIndexParameter, pageSizeParameter, pageWhereParameter);
        }
    
        public virtual ObjectResult<xp_SelectPageJihua_detail_Result> xp_SelectPageJihua_detail(Nullable<int> pageIndex, Nullable<int> pageSize, string id)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<xp_SelectPageJihua_detail_Result>("xp_SelectPageJihua_detail", pageIndexParameter, pageSizeParameter, idParameter);
        }
    }
}
